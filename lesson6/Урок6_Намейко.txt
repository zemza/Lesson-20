Beet Seed


1.


	Функціональне тестування
	Нефункціональне тестування
	Пов’язане зі зміною видів
	Що перевіряється
	Перевіряє якусь одну функцію
	Продуктивність, безпека, зручність використання тощо
	Програмне забезпечення після виправлення бага, аби розуміти, що проблема дійсно вирішена
	Коли застосовується
	Виконується першочергово
	Після функціонального
	Після додавання нової фічі або правки коду (регресійне) чи підтверджує виправлення помилки і коректну роботу функціоналу (ретест)
	Особливості
	Перевірка системи на відповідність вимогам і специфікаціям; може бути ручним або автоматизованим; базується на вимогах і специфікаціях.
	Перевіряє аспекти, не пов’язані з функціональністю системи; зазвичай автоматизоване; базується на очікуваннях користувачів.
	Розділяють такі тестування, пов’язані зі змінами: ретестинг, димове, регресійне, повторне, санітарне і тестування збірки. Вони підтверджують працездатність програми, або проводяться після установки ПЗ, або для розуміння, чи виправлений дефект.
	



2.
Обидва етапи надзвичайно важливі у життєвому циклі продукту. Ретестінг — це перевірка конкретних тестів, у яких виявлено баги. На ці помилки заводять баг-репорти і відправляють розробникам для виправлення. Ті виправляють і повертають тестувальникам для перевірки. Повторне тестування виконується в тому самому середовищі і з тими самими даними.


Регресійне — це тестування після внесення змін, як-от, додавання нової функції чи внесення коду. Регресійне тестування дає змогу зрозуміти, чи нормально продукт працює з новою функцією або виправленими помилками.








Beet Sprout[a]


1.
Функціональне і нефункціональне тестування однаково важливі, тож робити одне і не робити інше буде неправильно. Обидва ці типи тестування допомагають всебічно зрозуміти і оцінити особливості системи, і мають однакову мету — забезпечити кінцевого користувача якісним продуктом. Так, функціональні тести дозволяють зрозуміти, чи відповідає продукт заданим бізнес-вимогам, а нефункціональні — як добре працює система в цілому. Якщо ж проводити тільки функціональне тестування, функціонал ПЗ працює правильно (згідно вимогам), але яка ситуація з безпекою, надійністю, зручністю тощо — без нефункціонального тестування дізнатися неможливо.


2.
Димове тестування представляє собою такий тип тестування ПЗ, в якому тести спрямовані на перевірку роботи самих важливих і критичних функцій. По результатам димового тестування приймається рішення, чи є сенс в подальшому тестуванні, чи стабільною є поточна збірка.


Коли тестувальники отримують новий білд, важливо переконатися, що найважливіші функції працюють коректно, згідно очікувань. Саме в цей момент і використовується димове тестування. Плюс його в тому, що проблему виявляють на ранньому етапі і якщо вона є, то відхиляють цей білд або повертають на доопрацювання.




Mighty Beet


1.
Функціональні тест-кейси https://docs.google.com/spreadsheets/d/1HJFXMSIe3zJpIgInJz8zmh6nLKERfdPC8pIWmX978us/edit?usp=sharing 






2.
З нефункціональних вимог я би перевірила такі:
1. продуктивність, аби визначити як швидко додаток реагує на певні дії (наприклад, загрузку світлин) користувачів при певному навантаженні (наприклад, при підтримці 200 користувачів на годину час відповіді не має перевищувати 5 секунд);
2. портативність. Якщо додаток працює на Android 9, він має працювати і на Android 10 без втрати продуктивності;
3. зручність використання. Треба зрозуміти, чи легко юзеру користуватися додатком, наскільки зрозумілий інтерфейс, як часто користувачі роблять помилки. Якщо додаток містить платні функції, можна перевірити, чи не перевищує рівень помилок при надсиланні платіжних даних, скажімо, 5%.
[a]По цій частині не маю зауважень.